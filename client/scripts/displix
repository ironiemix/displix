#!/bin/bash 

# Disply exportieren (Fernsteuerung)
export DISPLAY=":0"
# Einstellungen
STARTDIR=~/start
BROWSERCMD="midori -e Fullscreen  -a "
INI="/home/pi/displix.conf"
# Konfigurierbare Variablen
VALUESFROMCONFIG="TEMPLATE DISPLIXURI TOTPSECRET DISPLAY_ON DISPLAY_OFF DELAYSECONDS INITIALDELAY"
# Debug?
DEBUG=no
# Zeit
NOW=$(date +%H%M)

declare -A SUBSTVAR

for i in $VALUESFROMCONFIG; do
	SUBSTVAR["$i"]=$(grep ^$i $INI | awk -F"=" '{print $2}' | tr -d " ")
done

if [ $DEBUG == "yes" ]; then 
for i in $VALUESFROMCONFIG; do
	echo -n "$i : " 
	echo ${SUBSTVAR["$i"]}
done
fi


function copyConfig() {
	templatedir=~/displix/client/templates/${SUBSTVAR["TEMPLATE"]}
	if [ -d $templatedir ]; then
		echo "Kopiere Systemverzeichnis von $templatedir..."
		rm -rf $STARTDIR
		cp -ar $templatedir $STARTDIR
		if [ -f $STARTDIR/displix.html ]; then 
			for i in $VALUESFROMCONFIG; do
				replacement=${SUBSTVAR["$i"]}
				sed -i "s|#####${i}#####|$replacement|g" $STARTDIR/displix.html
			done
		else 
			echo "Ung√ºltiges Template, keine displix.html Datei gefunden"
			exit 1
		fi
	else
		echo "Template Verzeichnis nicht gefunden!"
 		echo -n "Versucht wurde: "
		echo  $templatedir
		exit 1
	fi
} 

startBrowser() {
	cd $STARTDIR
	$BROWSERCMD displix.html
}

case $1 in
start)
	copyConfig		
	startBrowser
;;
stop)
	pidtokill=$(ps ax | grep pi/bin/displix | grep start | awk '{print $1}')
	for p in $pidtokill; do
		kill -9 $p
	done

	pidtokill=$(ps ax | grep midori | grep Full | awk '{print $1}')
	for p in $pidtokill; do
		kill -9 $p
	done

;;
restart)
    $0 stop && $0 start
;;
status)
    if [ $(pgrep -f "midori") ]; then
        echo -n "OK: ";
	pid=$(ps ax | grep midori | grep Full | awk '{print $1}')
	echo " 'midori' running with PID $pid"
	ps ax | grep midori | grep Full 
        exit 0;
     else
        echo "No instances of midori are running!";
        exit $?
     fi
;;
cron)
;;
*)
    echo "Usage: $0 {start|stop|reload|cron}";
    exit 2
;;
 
esac
